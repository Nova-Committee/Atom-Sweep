apply plugin: "dev.architectury.loom"
apply plugin: "com.replaymod.preprocess"

int mcVersion = 1

preprocess {
    mcVersion = vars.get()["MC"]
    tabIndentation = true
}


repositories {
    mavenCentral()
    maven {
        url = 'https://maven.nova-committee.cn/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation include("dev.vankka:dependencydownload-runtime:1.3.1") {
        exclude module: 'jar-relocator'
    }
    modImplementation include("dev.vankka:dependencydownload-common:1.3.1")
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    api include("cn.evole.config:AtomConfig-Toml:${project.toml_version}")
    compileOnly "net.luckperms:api:${lickperms_version}"
    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"

}

loom {
    runConfigs.all {
        ideConfigGenerated = true
        runDir "../../run"
    }
}

remapJar {
    remapperIsolation = true
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name + "-" + project.minecraft_dependency

processResources {
    filesMatching("fabric.mod.json") {
        def valueMap = [
                "mc_version"          : project.minecraft_dependency.replace(".", "_"),
                "version"             : project.version,
                "minecraft_dependency": project.minecraft_dependency
        ]
        expand valueMap
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

jar {
    from("../../../LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}